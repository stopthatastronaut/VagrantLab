
Vagrant.configure("2") do |config|
  config.vm.box = "gusztavvargadr/iis-windows-server"
  config.vm.network "public_network", bridge: 'WIFINetwork'  # deploys to phoenix. This will move to tellybox eventually

  config.vm.provider "hyperv" do |hv|
    hv.memory = "1024"
    hv.maxmemory = "1024"
    hv.vmname = "CalendarVM"
  end

  config.vm.synced_folder ".", "/vagrant", disabled: true   # turn off synced folders

  config.vm.provision "shell" do |s|
    s.inline = <<-'SHELL'

    Set-ExecutionPolicy Bypass -Scope Process -Force
    iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

    @(
      @{ package = 'powershell.core'; version = '' },
      # @{ package = 'git'; version = '' },
      # @{ package = 'poshgit'; version = '' },
      @{ package = 'googlechrome'; version = '' },
      @{ package = 'firefox'; version = '' },
      @{ package = 'dashlane'; version = '' },
      @{ package = 'octopusdeploy.tentacle'; version = '' }
    ) | % { choco install $_.package $_.version -y }


    refreshenv

    # chrome.exe https://app.trainingpeaks.com/

    # we need an Octopus Polling Tentacle on here
    cd "C:\Program Files\Octopus Deploy\Tentacle"

    ./Tentacle.exe create-instance --instance "Tentacle" --config "C:\Octopus\Tentacle.config" --console
    ./Tentacle.exe new-certificate --instance "Tentacle" --if-blank --console
    ./Tentacle.exe configure --instance "Tentacle" --reset-trust --console
    ./Tentacle.exe configure --instance "Tentacle" --home "C:\Octopus" --app "C:\Octopus\Applications" --noListen "True" --console
    ./Tentacle.exe register-with --instance "Tentacle" --server $env:OCTOPUS_CLI_SERVER --name "Calendar" --apiKey $env:OCTOPUS_CLI_API_KEY --comms-style "TentacleActive" --server-comms-port "10943" --force --environment "Home" --role "calendar-server" --console
    ./Tentacle.exe service --instance "Tentacle" --install --start --console

    hostname

    Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -value 0
    Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    Add-WindowsCapability -Online -Name OpenSSH.Server*

    #TODO: Get SSH KEY ON THIS DAMN THING

SHELL

    s.args = [ENV['OCTOPUS_CLI_API_KEY'], ENV['OCTOPUS_CLI_SERVER']]
    s.env = Hash["OCTOPUS_CLI_API_KEY" => ENV['OCTOPUS_CLI_API_KEY'], "OCTOPUS_CLI_SERVER" => ENV['OCTOPUS_CLI_SERVER']]
  end

  config.vm.provision "shell", inline: <<-THEEND

    Rename-Computer calendarvm -Force -verbose
    Restart-Computer -verbose -Force

  THEEND
end
